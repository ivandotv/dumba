name: Test
on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop
jobs:
  build:
    name: Node unit tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ['10', '12', '14']
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      - name: Install dependencies
        run: yarn install

      - name: Lint source
        run: |
          yarn lint:ci

      - name: Check types
        run: |
          yarn type:check

      - name: Run tests
        run: |
          yarn test:ci
        env:
          CI: true

      - name: Generate Code Coverage
        # only when running in node v14
        if: matrix.node == 14
        uses: codecov/codecov-action@v1

      - name: 'Publish to NPM'
        if: github.event_name == 'push' && github.repository == 'ivandotv/dumba' && matrix.node == 14
        uses: changesets/action@master
        with:
          # This expects you to have a script called release which does a build for your packages and calls changeset publish
          publish: yarn release
          commit: Version release
          title: Next release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
